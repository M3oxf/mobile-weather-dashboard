# === START: .github/workflows/purge-cloudflare.yml (fixed) ===
name: Purge Cloudflare cache

on:
  push:
    branches: [ "main" ]

jobs:
  purge:
    runs-on: ubuntu-latest

    steps:
      # Check that both secrets exist; store result in a step output
      - name: Check required secrets
        id: check
        env:
          CF_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ZONE:  ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: |
          if [ -z "$CF_TOKEN" ] || [ -z "$CF_ZONE" ]; then
            echo "missing=true" >> $GITHUB_OUTPUT
          else
            echo "missing=false" >> $GITHUB_OUTPUT
          fi

      # Only purge when secrets are present
      - name: Purge everything
        if: steps.check.outputs.missing == 'false'
        env:
          CF_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ZONE:  ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: |
          curl -sS -X POST "https://api.cloudflare.com/client/v4/zones/$CF_ZONE/purge_cache" \
            -H "Authorization: Bearer $CF_TOKEN" \
            -H "Content-Type: application/json" \
            --data '{"purge_everything":true}'
          echo "Sent purge request to Cloudflare."

      # Friendly message if secrets are missing
      - name: Skip (secrets not set)
        if: steps.check.outputs.missing == 'true'
        run: |
          echo "Cloudflare secrets not set. Skipping purge."
          echo "Add CLOUDFLARE_API_TOKEN and CLOUDFLARE_ZONE_ID in repo Settings → Secrets and variables → Actions."
# === END: .github/workflows/purge-cloudflare.yml (fixed) ===
